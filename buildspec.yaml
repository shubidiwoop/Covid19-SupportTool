version: 0.1
phases:
  # install:
  #   If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
  #   #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
  #   runtime-versions:
  #      nodejs: 10
  pre_build:
    commands:
      - echo Installing source NPM dependencies...
      - npm install
  build:
    commands:
      - echo Build started on `date`
      - npm run build

  post_build:
    commands:
      # copy the contents of /build to S3
      - aws s3 cp --recursive --acl public-read ./build s3://cloudfrontstack-s3bucket-y8n8yt2kgd5u/ 
      # set the cache-control headers for service-worker.js to prevent
      # browser caching
      # - >
      #   aws s3 cp --acl public-read 
      #   --cache-control="max-age=0, no-cache, no-store, must-revalidate" 
      #   ./build/service-worker.js s3://cloudfrontstack-s3bucket-y8n8yt2kgd5u/
      # # set the cache-control headers for index.html to prevent
      # # browser caching
      - >
        aws s3 cp --acl public-read 
        --cache-control="max-age=0, no-cache, no-store, must-revalidate" 
        ./build/index.html s3://cloudfrontstack-s3bucket-y8n8yt2kgd5u/
      # invalidate the CloudFront cache for index.html and service-worker.js
      # to force CloudFront to update its edge locations with the new versions
      - >
        aws cloudfront create-invalidation --distribution-id E1IEGNYUNG6VPR
        --paths /index.html 
artifacts:
  files:
    - '**/*'
  base-directory: build